# .github/workflows/build-release.yml

name: Create Cross-Platform Release

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    # Упрощаем матрицу, оставляем только ОС
    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ======================= ИЗМЕНЕНИЕ 1 (НОВЫЙ ШАГ) =======================
      # Создаем переменные в зависимости от ОС. Это надежнее, чем сложная матрица.
      - name: Set up build variables
        id: vars
        run: |
          if [ "${{ runner.os }}" == "macOS" ]; then
            echo "ICON_EXT=icns" >> $GITHUB_OUTPUT
            echo "ASSET_NAME=ShorinsCAD.app.zip" >> $GITHUB_OUTPUT
            echo "BUILD_PATH=dist/ShorinsCAD.app" >> $GITHUB_OUTPUT
          else
            echo "ICON_EXT=ico" >> $GITHUB_OUTPUT
            echo "ASSET_NAME=ShorinsCAD.exe" >> $GITHUB_OUTPUT
            echo "BUILD_PATH=dist/ShorinsCAD.exe" >> $GITHUB_OUTPUT
          fi
        shell: bash
      # =====================================================================

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install -r requirements.txt
      
      # Используем созданные переменные
      - name: Build with PyInstaller
        run: >
          pyinstaller --name "ShorinsCAD" --windowed --onefile --icon "assets/icon.${{ steps.vars.outputs.ICON_EXT }}" run.py

      # Используем созданные переменные
      - name: Archive macOS App Bundle
        if: runner.os == 'macOS'
        run: zip -r "dist/${{ steps.vars.outputs.ASSET_NAME }}" "${{ steps.vars.outputs.BUILD_PATH }}"

      # Используем созданные переменные
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.vars.outputs.ASSET_NAME }}
          path: "dist/${{ steps.vars.outputs.ASSET_NAME }}"

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-assets
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          generate_release_notes: true
          # Загружаем все, что скачали - теперь это будут .zip и .exe
          files: release-assets/*/*